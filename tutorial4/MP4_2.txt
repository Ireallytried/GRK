<style> body { background-color:#ccc; } </style>

<script src="//cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.7/p5.js"></script>

<body>

<script type="text/javascript">

var imgA;

var imgB; 

function setup() {

    createCanvas(512,512);

    background(255);  

    imgA = createImage(512,512);

    imgB = createImage(512,512);

    imgA.loadPixels();

    imgB.loadPixels();

    var d = pixelDensity();

    for(var i=0; i<512*512*4*d; i+=4) {

      imgA.pixels[i]=240;

      imgA.pixels[i+1]=250;

      imgA.pixels[i+2]=240;

      imgA.pixels[i+3]=255;

      imgB.pixels[i]=240;

      imgB.pixels[i+1]=240;

      imgB.pixels[i+2]=250;

      imgB.pixels[i+3]=255;

    }

    imgA.updatePixels();

    imgB.updatePixels();

}

function draw() {

    if (!keyIsDown(32)) {

      image(imgA,0,0);

      text('Image A',10,20);

    } else {

      image(imgB,0,0);

      text('Image B',10,20);

  }

} 
function makeVector(x,y) {
var tab=[x,y,1];
return tab;
}

function drawVector( img,vec) {
img.set(vec[0], vec[1], 0);
img.updatePixels();
}

function mouseDragged() {
vector=makeVector(mouseX, mouseY);
drawVector(imgA, vector);
}


function matriceIndentity() {
 return [[1, 0, 0],
         [0, 1, 0],
         [0, 0, 1]];
}


function matriceTranslation(tx,ty) {
return [ [1, 0, tx],
         [0, 1, ty],
         [0, 0, 1]];
}


function matriceScaling(sx,sy) {
 return [ [sx, 0, 0],
          [0, sy, 0],
          [0, 0, 1]];      
}

function matriceRotation(theta){
return [[Math.cos(theta / 180 * Math.PI), - Math.sin(theta / 180 * Math.PI), 0],
        [Math.sin(theta / 180 * Math.PI), Math.cos(theta / 180 * Math.PI), 0],
        [0, 0, 1] ];           
}


function matriceShearTransform(shx,shy) {
  return [ [1, shx, 0],
           [shy, 1, 0],
           [0, 0, 1]];               
}


</script>

</body>